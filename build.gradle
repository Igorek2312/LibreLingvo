buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "at.comm_unity.gradle.plugins.jpamodelgen" version "1.1.1"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'at.comm_unity.gradle.plugins.jpamodelgen'

jar {
	baseName = projectName
	version = projectVersion
}

group = projectGroup
version = projectVersion
sourceCompatibility = projectSourceCompatibility
targetCompatibility = projectTargetCompatibility

repositories {
	mavenCentral()
	maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'src/main/generated']
		}
		resources {
			srcDirs = ['src/main/resources']
		}
	}
	test {
		java {
			srcDirs = ['src/test/java', 'src/test/generated_tests']
		}
		resources {
			srcDirs = ['src/test/resources']
		}
	}
}

bootRepackage {
	mainClass = 'org.libre.lingvo.LibreLingvoApplication'
}

def hibernateVersion = '5.2.3.Final'

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-devtools')

	compile group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: hibernateVersion
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.0.11.RELEASE'
	compile group: 'org.modelmapper', name: 'modelmapper', version: '+'
	compile group: 'org.freemarker', name: 'freemarker', version: '2.3.23'
	compile group: 'com.google.guava', name: 'guava', version: '20.0'

	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

sourceSets {
	generated {
		java.srcDir "${buildDir}/generated/src/java/"
	}
}

jpaModelgen {
	library = "org.hibernate:hibernate-jpamodelgen:${hibernateVersion}"
	jpaModelgenSourcesDir = "src/main/generated"
}

compileJava.options.compilerArgs += ["-proc:none"]

